name: Release Docker Version Image

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'Nouvelle version Ã  appliquer'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Dockerfile exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found in repository root!"
            exit 1
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push tag
        run: |
          TAG="${{ github.event.inputs.new_version }}"
          git tag $TAG
          git push origin $TAG

      - name: Build Docker "latest" image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .

      - name: Push Docker "latest" image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest

      - name: Build Docker version image
        run: |
          docker build --build-arg VERSION=${{ github.event.inputs.new_version }} -t ghcr.io/${{ github.repository }}:${{ github.event.inputs.new_version }} .

      - name: Change Docker version
        run: |
          docker tag ghcr.io/${{ github.repository }}:latest ghcr.io/${{ github.repository }}:${{ github.event.inputs.new_version }}
          docker push ghcr.io/${{ github.repository }}:${{ github.event.inputs.new_version }}

      - name: Create GitHub Release
        run: |
          TAG="${{ github.event.inputs.new_version }}"
          gh release create "$TAG" --title "$TAG" --notes "Release $TAG"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}